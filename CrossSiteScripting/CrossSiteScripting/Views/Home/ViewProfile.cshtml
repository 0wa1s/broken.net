@model CrossSiteScripting.Models.StudentModel

@{
    ViewBag.Title = "ViewProfile";
}

<h2>ViewProfile</h2>



<p>
    <strong>Name parameter is vulnerable but .net validator stops generic attack vectors</strong>
    <!-- Unsafe Use-->
    <br /><br />
    <strong>Name Vulnerable Output</strong> :@Html.Raw(ViewData["Name"])<br />
    <!-- safe methods -->
    <strong>Name Safe Output</strong> :@Html.ViewData["Name"]<br />
    <strong>City</strong> : @ViewData["City"]<br />
    <strong>Address</strong> : @ViewData["Address"]<br />
    @Html.ActionLink("Back to List", "Index")
</p>
<!--using unsanitized data in html attribute context with request validation enabled-->
<strong>Link parameters are also vulnerable but .net validator does not catch context based XSS </strong>
<br /><br />
<href link="xyz.net" alt="@Html.Raw(ViewData["City"])">Hover Here !</href><br />
<href link="xyz.net" alt="@(new HtmlString(ViewData["City"].ToString()))">Hover Here !</href>

